[project]
name = "maplestory-py-opt"
version = "0.1.0"
description = "Optimizer for Maplestory WSE, Familiars, Hyper Stats, Legion Grid, and Link Skills"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "numba>=0.60.0",
    "numpy>=2.0.2",
    "pydantic>=2.11.2",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "ruff>=0.11.4",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
maplestory-opt = "maplestory_py_opt.main:main"

[tool.ruff]
fix=true
output-format = "grouped"
line-length = 160
target-version = "py313"
exclude = ["build", ".venv"]

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint]
select = [
    "A", # flake8-builtins
    "ASYNC", # https://docs.astral.sh/ruff/rules/#flake8-async-async
    "B", # flake8-bugbear
    "BLE", # flake8-blind-except
    "C4", # unnecessary comprehensions, map()
    "DTZ", # flake8-datetimez
    "E", # pycodestyle
    "ERA", # No commented out code
    "EXE", # flake8-executable
    "F", # pyflakes
    "FLY", # flynt
    "G", # flake8-logging-format
    "I", # isort
    "ICN", # https://github.com/joaopalmeiro/flake8-import-conventions
    "ISC", # https://pypi.org/project/flake8-implicit-str-concat/
    "LOG", # flake8-logging
    "NPY", # numpy
    "PERF", # perflint
    "PIE", # https://pypi.org/project/flake8-pie/
    "PLC", # Pylint conventions
    "PLE", # Pylint error
    "PLW", # Pylint warnings
    "PT", # https://pypi.org/project/flake8-pytest-style/
    "PTH", # flake8 use pathlib
    "RET", # https://pypi.org/project/flake8-return/
    "RUF", # Ruff rules
    "S", # https://docs.astral.sh/ruff/rules/#flake8-bandit-s
    "SIM", # https://pypi.org/project/flake8-simplify/
    "T", # flake8-debugger
    "TRY", # tryceratops
    "UP", # pyupgrade
    "W", # pycodestyle
]

ignore = [
    "G004",
    "TRY003"
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
